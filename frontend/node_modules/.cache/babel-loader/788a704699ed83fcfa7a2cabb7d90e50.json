{"ast":null,"code":"var _jsxFileName = \"/Users/leocao/T18B-Blue/src/components/Channel/index.js\";\nimport { Avatar, List, ListItem, ListItemIcon, ListItemText, ListSubheader, Typography, Button, Grid, Link, IconButton } from '@material-ui/core';\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport PersonAddDisabled from '@material-ui/icons/PersonAddDisabled';\nimport axios from 'axios';\nimport React from 'react';\nimport AddMemberDialog from './AddMemberDialog';\nimport ChannelMessages from './ChannelMessages';\nimport AuthContext from '../../AuthContext';\nimport { extractUId } from '../../utils/token';\nimport { isMatchingId } from '../../utils';\nimport { useStep } from '../../utils/update';\nimport { HangmanGame } from '../Hangman/HangmanGame';\n\nfunction Channel({\n  channel_id,\n  ...props\n}) {\n  const [name, setName] = React.useState('');\n  const [members, setMembers] = React.useState([]);\n  const [owners, setOwners] = React.useState([]);\n  const token = React.useContext(AuthContext);\n  const u_id = extractUId(token);\n\n  function fetchChannelData() {\n    axios.get('/channel/details', {\n      params: {\n        token,\n        channel_id\n      }\n    }).then(({\n      data\n    }) => {\n      const {\n        name,\n        owner_members,\n        all_members\n      } = data; // assumes members of form [{ u_id, name_first, name_last }]\n\n      setMembers(all_members);\n      setOwners(owner_members);\n      setName(name);\n    }).catch(err => {\n      setMembers([]);\n      setOwners([]);\n      setName('');\n    });\n  }\n\n  const step = useStep(fetchChannelData, [channel_id, token], 2);\n\n  function joinChannel(channel_id, token) {\n    axios.post('/channel/join', {\n      token,\n      channel_id\n    }).then(() => {\n      fetchChannelData(channel_id, token);\n    }).catch(err => {});\n  }\n\n  function leaveChannel(channel_id, token) {\n    axios.post('/channel/leave', {\n      token,\n      channel_id\n    }).then(() => {\n      fetchChannelData(channel_id, token);\n    }).catch(err => {});\n  }\n\n  function addOwner(u_id) {\n    axios.post('/channel/addowner', {\n      token,\n      channel_id,\n      u_id\n    }).then(() => {\n      fetchChannelData(channel_id, token);\n    }).catch(err => {});\n  }\n\n  function removeOwner(u_id) {\n    axios.post('/channel/removeowner', {\n      token,\n      channel_id,\n      u_id\n    }).then(() => {\n      fetchChannelData(channel_id, token);\n    }).catch(err => {});\n  }\n\n  function userIsMember(members) {\n    return members.find(member => isMatchingId(member.u_id, u_id)) !== undefined;\n  }\n\n  function userIsOwner(owners, u_id) {\n    return owners.find(owner => isMatchingId(owner.u_id, u_id)) !== undefined;\n  }\n\n  const viewerIsOwner = userIsOwner(owners, u_id);\n  const viewerIsMember = userIsMember(members);\n  return React.createElement(React.Fragment, null, React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, name.toUpperCase()), React.createElement(List, {\n    subheader: React.createElement(ListSubheader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Members\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, members.map(({\n    u_id,\n    name_first,\n    name_last,\n    profile_img_url\n  }) => React.createElement(ListItem, {\n    key: u_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"avatar-small\",\n    src: profile_img_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: React.createElement(React.Fragment, null, React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: `/profile/${u_id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, `${name_first} ${name_last}`), `${userIsOwner(owners, u_id) ? ' ⭐' : ' '}`), viewerIsOwner && React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, userIsOwner(owners, u_id) ? React.createElement(IconButton, {\n      size: \"small\",\n      onClick: () => removeOwner(u_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(PersonAddDisabled, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })) : React.createElement(IconButton, {\n      size: \"small\",\n      onClick: () => addOwner(u_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(PersonAdd, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }))))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }))), React.createElement(ListItem, {\n    key: \"invite_member\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, userIsMember(members) ? React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(AddMemberDialog, {\n    channel_id: channel_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: () => leaveChannel(channel_id, token),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Leave Channel\"))) : React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: () => joinChannel(channel_id, token),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Join Channel\"))), viewerIsMember && React.createElement(ChannelMessages, {\n    channel_id: channel_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Game display: \"), React.createElement(HangmanGame, {\n    token: token,\n    channel_id: channel_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Game display above ^^^\"));\n}\n\nexport default Channel;","map":{"version":3,"sources":["/Users/leocao/T18B-Blue/src/components/Channel/index.js"],"names":["Avatar","List","ListItem","ListItemIcon","ListItemText","ListSubheader","Typography","Button","Grid","Link","IconButton","PersonAdd","PersonAddDisabled","axios","React","AddMemberDialog","ChannelMessages","AuthContext","extractUId","isMatchingId","useStep","HangmanGame","Channel","channel_id","props","name","setName","useState","members","setMembers","owners","setOwners","token","useContext","u_id","fetchChannelData","get","params","then","data","owner_members","all_members","catch","err","step","joinChannel","post","leaveChannel","addOwner","removeOwner","userIsMember","find","member","undefined","userIsOwner","owner","viewerIsOwner","viewerIsMember","toUpperCase","map","name_first","name_last","profile_img_url"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  Typography,\n  Button,\n  Grid,\n  Link,\n  IconButton,\n} from '@material-ui/core';\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport PersonAddDisabled from '@material-ui/icons/PersonAddDisabled';\nimport axios from 'axios';\nimport React from 'react';\nimport AddMemberDialog from './AddMemberDialog';\nimport ChannelMessages from './ChannelMessages';\nimport AuthContext from '../../AuthContext';\nimport { extractUId } from '../../utils/token';\nimport { isMatchingId } from '../../utils';\nimport { useStep } from '../../utils/update';\nimport { HangmanGame } from '../Hangman/HangmanGame';\n\nfunction Channel({ channel_id, ...props }) {\n  const [name, setName] = React.useState('');\n  const [members, setMembers] = React.useState([]);\n  const [owners, setOwners] = React.useState([]);\n  const token = React.useContext(AuthContext);\n  const u_id = extractUId(token);\n\n\n  function fetchChannelData() {\n    axios\n      .get('/channel/details', {\n        params: {\n          token,\n          channel_id,\n        },\n      })\n      .then(({ data }) => {\n        const { name, owner_members, all_members } = data;\n        // assumes members of form [{ u_id, name_first, name_last }]\n        setMembers(all_members);\n        setOwners(owner_members);\n        setName(name);\n      })\n      .catch((err) => {\n        setMembers([]);\n        setOwners([]);\n        setName('');\n      });\n  }\n\n  const step = useStep(fetchChannelData, [channel_id, token], 2);\n\n  function joinChannel(channel_id, token) {\n    axios\n      .post('/channel/join', {\n        token,\n        channel_id,\n      })\n      .then(() => {\n        fetchChannelData(channel_id, token);\n      })\n      .catch((err) => { });\n  }\n\n  function leaveChannel(channel_id, token) {\n    axios\n      .post('/channel/leave', {\n        token,\n        channel_id,\n      })\n      .then(() => {\n        fetchChannelData(channel_id, token);\n      })\n      .catch((err) => { });\n  }\n\n  function addOwner(u_id) {\n    axios\n      .post('/channel/addowner', {\n        token,\n        channel_id,\n        u_id,\n      })\n      .then(() => {\n        fetchChannelData(channel_id, token);\n      })\n      .catch((err) => { });\n  }\n\n  function removeOwner(u_id) {\n    axios\n      .post('/channel/removeowner', {\n        token,\n        channel_id,\n        u_id,\n      })\n      .then(() => {\n        fetchChannelData(channel_id, token);\n      })\n      .catch((err) => { });\n  }\n\n  function userIsMember(members) {\n    return members.find((member) => isMatchingId(member.u_id, u_id)) !== undefined;\n  }\n\n  function userIsOwner(owners, u_id) {\n    return owners.find((owner) => isMatchingId(owner.u_id, u_id)) !== undefined;\n  }\n\n  const viewerIsOwner = userIsOwner(owners, u_id);\n  const viewerIsMember = userIsMember(members);\n\n  return (\n    <>\n      <Typography variant=\"h4\">{name.toUpperCase()}</Typography>\n      <List subheader={<ListSubheader>Members</ListSubheader>}>\n        {members.map(({ u_id, name_first, name_last, profile_img_url }) => (\n          <ListItem key={u_id}>\n            <ListItemIcon>\n              <img className=\"avatar-small\" src={profile_img_url} />\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                <>\n                  <Grid container alignItems=\"center\" spacing={1}>\n                    <Grid item>\n                      <Link\n                        href={`/profile/${u_id}`}\n                      >{`${name_first} ${name_last}`}</Link>\n                      {`${userIsOwner(owners, u_id) ? ' ⭐' : ' '}`}\n                    </Grid>\n                    {viewerIsOwner && (\n                      <Grid item>\n                        {userIsOwner(owners, u_id) ? (\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => removeOwner(u_id)}\n                          >\n                            <PersonAddDisabled />\n                          </IconButton>\n                        ) : (\n                            <IconButton\n                              size=\"small\"\n                              onClick={() => addOwner(u_id)}\n                            >\n                              <PersonAdd />\n                            </IconButton>\n                          )}\n                      </Grid>\n                    )}\n                  </Grid>\n                </>\n              }\n            />\n          </ListItem>\n        ))}\n        <ListItem key=\"invite_member\">\n          {userIsMember(members) ? (\n            <Grid container spacing={1}>\n              <Grid item>\n                <AddMemberDialog channel_id={channel_id} />\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"outlined\"\n                  onClick={() => leaveChannel(channel_id, token)}\n                >\n                  Leave Channel\n                </Button>\n              </Grid>\n            </Grid>\n          ) : (\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => joinChannel(channel_id, token)}\n              >\n                Join Channel\n              </Button>\n            )}\n        </ListItem>\n      </List>\n      {viewerIsMember && <ChannelMessages channel_id={channel_id} />}\n      <p>Game display: </p>\n      <HangmanGame token={token} channel_id={channel_id} />\n      <p>Game display above ^^^</p>\n    </>\n  );\n}\n\nexport default Channel;\n"]},"metadata":{},"sourceType":"module"}